server.port=9001

#mybaits配置下划线转驼峰
mybatis.configuration.map-underscore-to-camel-case=true

logging.level.root=info
spring.main.allow-bean-definition-overriding=true



#打印执行的数据库以及语句
spring.shardingsphere.props.sql.show=true

## 配置数据源的名称，多个用，隔开,从库用slave0...slaven表示
spring.shardingsphere.datasource.names=master0,master1


## 数据源配置
spring.shardingsphere.datasource.master0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.master0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.master0.url=jdbc:mysql://localhost:3306/user_db_0?characterEncoding=utf-8
spring.shardingsphere.datasource.master0.username=root
spring.shardingsphere.datasource.master0.password=root


spring.shardingsphere.datasource.master1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.master1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.master1.url=jdbc:mysql://localhost:3306/user_db_1?characterEncoding=utf-8
spring.shardingsphere.datasource.master1.username=root
spring.shardingsphere.datasource.master1.password=root

#用于多分片键的复合分片场景
#分片列名称，多个列以逗号分隔
spring.shardingsphere.sharding.tables.user_sharded_by_user_id_.database-strategy.complex.sharding-columns=order_no,user_id
#复合分片算法类名称。该类需实现ComplexKeysShardingAlgorithm接口并提供无参数的构造器
spring.shardingsphere.sharding.tables.user_sharded_by_user_id_.database-strategy.complex.algorithm-class-name=com.sharding.demo.shard.algorithm.UserDbShardingByUserAlgorithm

#分表策略
spring.shardingsphere.sharding.tables.user_sharded_by_user_id_.actual-data-nodes=master$->{0..1}.user_sharded_by_user_id_$->{0..1}
#分片字段
spring.shardingsphere.sharding.tables.user_sharded_by_user_id_.table-strategy.complex.sharding-columns=order_no,user_id
#user表分片策略类
spring.shardingsphere.sharding.tables.user_sharded_by_user_id_.table-strategy.complex.algorithm-class-name=com.sharding.demo.shard.algorithm.UserTableShardingByUserAlgorithm

#主键名称，缺省表示不使用自增主键生成器
spring.shardingsphere.sharding.tables.user_sharded_by_user_id_.key-generator.column=id
#主键生成器类型，内置类型：SNOWFLAKE/UUID
spring.shardingsphere.sharding.tables.user_sharded_by_user_id_.key-generator.type=SNOWFLAKE
#工作机器 id
spring.shardingsphere.sharding.tables.user_sharded_by_user_id_.key-generator.props.worker.id=${workerId}
#时钟回拨可以容忍的毫秒数，默认10ms
spring.shardingsphere.sharding.tables.user_sharded_by_user_id_.key-generator.props.max.tolerate.time.difference.milliseconds=5

